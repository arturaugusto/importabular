{"version":3,"sources":["../src/index.js","demo.js"],"names":["_events","_Importabular","data","node","onChange","minRows","maxRows","Infinity","minCols","maxCols","css","width","height","_LooseArray","e","_editing","preventDefault","rows","_parsePasteEvent","_selection","rx","ry","offset","x","y","length","_setVal","_changeSelectedCellsStyle","_selectionStart","_selectionEnd","_onDataChanged","asArr","_getSelectionAsArray","clipboardData","setData","_arrToHTML","map","row","join","copy","_setAllSelectedCellsTo","ctrlKey","key","_revertEdit","_stopEditing","_tabCursorInSelection","shiftKey","_startEditing","_focus","_moveCursor","_getCell","firstChild","value","mobile","which","_selectionSize","range","Range","setStart","setEnd","cwd","getSelection","removeAllRanges","addRange","tbody","style","userSelect","_getCoords","_selecting","_endSelection","_lastMouseUp","Date","now","_lastMouseUpTarget","target","moved","td","input","removeEventListener","_blurIfEnter","removeChild","_renderTDContent","keyCode","className","_classNames","div","tagName","textContent","_getVal","_restyle","Error","_parent","_options","_defaultCss","_iframeStyle","border","background","_setupDom","_replaceDataWithArray","_incrementToFit","_fillScrollSpace","Math","ceil","iframe","contentWindow","innerHeight","cols","innerWidth","_data","_toArr","document","createElement","setAttribute","toString","val","innerHTML","appendChild","open","write","navigator","language","close","Object","assign","table","body","_height","tr","_width","_addCell","forEach","name","addEventListener","_destroyEditing","parentElement","_fitBounds","Array","prototype","call","children","_incrementWidth","_incrementHeight","result","push","_forSelectionCoord","_refreshDisplayedValue","shiftSelectionEnd","curr","nc","_scrollIntoView","horizontal","delta","selectionSize","_shift","temporaryCursor","scrollIntoView","behavior","block","tdSize","getBoundingClientRect","cellSize","type","focus","callback","oldS","_getSelectionCoords","reverse","cb","classes","getAttribute","parseInt","_clear","line","deltaX","xMin","xMax","yMin","yMax","event","html","window","getData","trs","querySelectorAll","tds","text","fromText","split","hash","cleanedVal","_cleanVal","_isEmpty","max","obj","keys","arr","cell","outerHTML","sheet","Importabular","getElementById","console","info","getElementsByClassName","n","pre","js","innerText","trim","replace","lines","match","l","i","slice"],"mappings":"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","file":"demo.3298ed6a.js","sourceRoot":"../demo","sourcesContent":["/** @private All the events we listen to inside the iframe at the root level.\n * Each one is mapped to the corresponding method on the instance. */\nconst _events = [\n  \"mousedown\",\n  \"mouseenter\",\n  \"mouseup\",\n  \"mouseleave\",\n  \"touchstart\",\n  \"touchend\",\n  \"touchmove\",\n  \"keydown\",\n  \"paste\",\n  \"cut\",\n  \"copy\",\n];\n\n/**\n * Spreadsheet component\n * @param {Object} options\n * @param {Array} options.data Initial data of the table, ie [['A1','A2'],['B1','B2']]\n * @param {Node} options.node Dom node to create the table into\n * @param {Node} options.onChange Callback to run whenever the data\n *               has changed, receives the new data as an argument.\n *@param {Number} options.minRows Minimum number of rows.\n *@param {Number} options.maxRows Maximum number of rows, the table will not grow vertically beyond this.\n *@param {Number} options.minCols Minimum number of columns.\n *@param {Number} options.maxCols Maximum number of columns, the table will not grow horizontally beyond this.\n *@param {String} options.css Css code to add inside the iframe.\n *\n *@param {Object} options.width Width of the iframe that will contain the table.\n *@param {Object} options.height Height of the iframe that will contain the table.\n *\n */\nexport default class _Importabular {\n  constructor({\n    data = [],\n    node = null,\n    onChange = null,\n    minRows = 1,\n    maxRows = Infinity,\n    minCols = 1,\n    maxCols = Infinity,\n    css = \"\",\n    width = \"100%\",\n    height = \"80vh\",\n  }) {\n    if (!node) {\n      throw new Error(\n        \"You need to pass a node argument to Importabular, like this : new Importabular({node: document.body})\"\n      );\n    }\n    // Reference to the parent DOM element, contains the iframe\n    this._parent = node;\n    this._options = {\n      onChange,\n      minRows,\n      maxRows,\n      minCols,\n      maxCols,\n      css: _defaultCss + css,\n    };\n    this._iframeStyle = {\n      width,\n      height,\n      border: \"none\",\n      background: \"transparent\",\n    };\n\n    this._setupDom();\n    this._replaceDataWithArray(data);\n    this._incrementToFit({\n      x: this._options.minCols - 1,\n      y: this._options.minRows - 1,\n    });\n    this._fillScrollSpace();\n  }\n\n  /** @private {Number} Current number of columns of the table. */\n  _width = 1;\n\n  /** @private {Number} Current number of rows of the table. */\n  _height = 1;\n\n  /** @private {_LooseArray} Current content of the table, stored as 2D map.*/\n  _data = new _LooseArray();\n\n  /** @private Checks whether this cell should be editable, or if it's out of bounds*/\n  _fitBounds({ x, y }) {\n    return (\n      x >= 0 && x < this._options.maxCols && y >= 0 && y < this._options.maxRows\n    );\n  }\n\n  /** @private Fill the iframe visible window with empty cells*/\n  _fillScrollSpace() {\n    const rows = Math.ceil(this.iframe.contentWindow.innerHeight / 40);\n    const cols = Math.ceil(this.iframe.contentWindow.innerWidth / 100);\n    this._incrementToFit({ x: cols - 1, y: rows - 1 });\n  }\n\n  /** @private Runs the onchange callback*/\n  _onDataChanged() {\n    if (this._options.onChange) this._options.onChange(this._data._toArr());\n  }\n\n  /** @private Create a div with the cell content and correct style */\n  _renderTDContent(td, x, y) {\n    const div = document.createElement(\"div\");\n    td.setAttribute(\"x\", x.toString());\n    td.setAttribute(\"y\", y.toString());\n    const val = this._getVal(x, y);\n    if (val) {\n      div.textContent = val;\n    } else {\n      // Force no collapse of cell\n      div.innerHTML = \"&nbsp;\";\n    }\n    td.appendChild(div);\n    this._restyle({ x, y });\n  }\n\n  /** @private Initial dom setup */\n  _setupDom() {\n    // We wrap the table in an iframe mostly to let the browser\n    // handle the focus for us, without the need for a hidden\n    // input. It also makes sure that the style of the table is \"clean\"\n    // but makes it harder to style the content.\n    const iframe = document.createElement(\"iframe\");\n    this.iframe = iframe;\n    this._parent.appendChild(iframe);\n    const cwd = iframe.contentWindow.document;\n    this.cwd = cwd;\n    cwd.open();\n    cwd.write(\n      `<html lang=\"${navigator.language}\"><body><style>${this._options.css}</style></body></html>`\n    );\n    cwd.close();\n    Object.assign(iframe.style, this._iframeStyle);\n\n    const table = document.createElement(\"table\");\n    const tbody = document.createElement(\"tbody\");\n\n    table.appendChild(tbody);\n    cwd.body.appendChild(table);\n    this.tbody = tbody;\n    this.table = table;\n\n    for (let y = 0; y < this._height; y++) {\n      const tr = document.createElement(\"tr\");\n      tbody.appendChild(tr);\n      for (let x = 0; x < this._width; x++) {\n        this._addCell(tr, x, y);\n      }\n    }\n\n    _events.forEach((name) => cwd.addEventListener(name, this[name], true));\n  }\n\n  /** Destroys the table, and clears even listeners\n   * @public\n   * */\n  destroy() {\n    this._destroyEditing();\n\n    _events.forEach((name) =>\n      this.cwd.removeEventListener(name, this[name], true)\n    );\n\n    this.iframe.parentElement.removeChild(this.iframe);\n  }\n\n  /** @private Creates a TD, sets its content and adds it to the TR */\n  _addCell(tr, x, y) {\n    const td = document.createElement(\"td\");\n    tr.appendChild(td);\n    this._renderTDContent(td, x, y);\n  }\n\n  _incrementHeight() {\n    if (!this._fitBounds({ x: 0, y: this._height })) return false;\n    this._height++;\n    const y = this._height - 1;\n    const tr = document.createElement(\"tr\");\n\n    this.tbody.appendChild(tr);\n    for (let x = 0; x < this._width; x++) {\n      this._addCell(tr, x, y);\n    }\n    return true;\n  }\n\n  _incrementWidth() {\n    if (!this._fitBounds({ x: this._width, y: 0 })) return false;\n    this._width++;\n    const x = this._width - 1;\n    Array.prototype.forEach.call(this.tbody.children, (tr, y) => {\n      this._addCell(tr, x, y);\n    });\n    return true;\n  }\n  /** @private Makes the table bigger to contain a cell for those coordinates*/\n  _incrementToFit({ x, y }) {\n    while (x > this._width - 1 && this._incrementWidth());\n    while (y > this._height - 1 && this._incrementHeight());\n  }\n\n  /** @private Handles the paste event on the node.*/\n  paste = (e) => {\n    if (this._editing) return;\n    e.preventDefault();\n    const rows = _parsePasteEvent(e);\n    const { rx, ry } = this._selection;\n    const offset = { x: rx[0], y: ry[0] };\n\n    for (let y = 0; y < rows.length; y++)\n      // Using the first column here makes sure that\n      // if the paste data had various row length, we only\n      // paste a clean rectangle\n      for (let x = 0; x < rows[0].length; x++)\n        this._setVal(offset.x + x, offset.y + y, rows[y][x]);\n\n    this._changeSelectedCellsStyle(() => {\n      this._selectionStart = offset;\n      this._selectionEnd = {\n        x: offset.x + rows[0].length - 1,\n        y: offset.y + rows.length - 1,\n      };\n    });\n    this._onDataChanged();\n  };\n\n  /** @private Returns the currently selected cells as a 2D array of strings.*/\n  _getSelectionAsArray() {\n    const { rx, ry } = this._selection;\n    if (rx[0] === rx[1]) return null;\n    const width = rx[1] - rx[0];\n    const height = ry[1] - ry[0];\n    const result = [];\n    for (let y = 0; y < height; y++) {\n      result.push([]);\n      for (let x = 0; x < width; x++) {\n        result[y].push(this._getVal(rx[0] + x, ry[0] + y));\n      }\n    }\n    return result;\n  }\n\n  /** @private Called when the copy even happens in the iframe.*/\n  copy = (e) => {\n    if (this._editing) return;\n    const asArr = this._getSelectionAsArray();\n    if (asArr) {\n      e.preventDefault();\n      e.clipboardData.setData(\"text/html\", _arrToHTML(asArr));\n      e.clipboardData.setData(\n        \"text/plain\",\n        asArr.map((row) => row.join(\"\")).join(\"\\n\")\n      );\n    }\n  };\n\n  /** @private Called when the cut even happens in the iframe.\n   * Runs the copy method and then clears the cells.\n   * */\n  cut = (e) => {\n    if (this._editing) return;\n    this.copy(e);\n    this._setAllSelectedCellsTo(\"\");\n  };\n\n  keydown = (e) => {\n    if (e.ctrlKey) return;\n\n    if (this._selectionStart) {\n      if (e.key === \"Escape\" && this._editing) {\n        e.preventDefault();\n        this._revertEdit();\n        this._stopEditing();\n      }\n      if (e.key === \"Enter\") {\n        e.preventDefault();\n        this._tabCursorInSelection(false, e.shiftKey ? -1 : 1);\n      }\n\n      if (e.key === \"Tab\") {\n        e.preventDefault();\n        this._tabCursorInSelection(true, e.shiftKey ? -1 : 1);\n      }\n      if (!this._editing) {\n        if (e.key === \"F2\") {\n          e.preventDefault();\n          this._startEditing(this._focus);\n        }\n        if (e.key === \"Delete\" || e.key === \"Backspace\") {\n          e.preventDefault();\n          this._setAllSelectedCellsTo(\"\");\n        }\n        if (e.key === \"ArrowDown\") {\n          e.preventDefault();\n          this._moveCursor({ y: 1 }, e.shiftKey);\n        }\n\n        if (e.key === \"ArrowUp\") {\n          e.preventDefault();\n          this._moveCursor({ y: -1 }, e.shiftKey);\n        }\n        if (e.key === \"ArrowLeft\") {\n          e.preventDefault();\n          this._moveCursor({ x: -1 }, e.shiftKey);\n        }\n        if (e.key === \"ArrowRight\") {\n          e.preventDefault();\n          this._moveCursor({ x: +1 }, e.shiftKey);\n        }\n      }\n\n      if (e.key.length === 1 && !this._editing) {\n        this._changeSelectedCellsStyle(() => {\n          const { x, y } = this._focus;\n          // We clear the value of the cell, and the keyup event will\n          // happen with the cursor inside the cell and type the character there\n          this._startEditing({ x, y });\n          this._getCell(x, y).firstChild.value = \"\";\n        });\n      }\n    }\n  };\n\n  _setAllSelectedCellsTo(value) {\n    this._forSelectionCoord(this._selection, ({ x, y }) =>\n      this._setVal(x, y, value)\n    );\n    this._forSelectionCoord(this._selection, this._refreshDisplayedValue);\n\n    this._onDataChanged();\n  }\n\n  _moveCursor({ x = 0, y = 0 }, shiftSelectionEnd) {\n    const curr = shiftSelectionEnd ? this._selectionEnd : this._selectionStart;\n    const nc = { x: curr.x + x, y: curr.y + y };\n    if (!this._fitBounds(nc)) return;\n    this._stopEditing();\n    this._incrementToFit(nc);\n    this._changeSelectedCellsStyle(() => {\n      if (shiftSelectionEnd) {\n        this._selectionEnd = nc;\n      } else {\n        this._selectionStart = this._selectionEnd = this._focus = nc;\n      }\n    });\n    this._scrollIntoView(nc);\n  }\n\n  _tabCursorInSelection(horizontal, delta = 1) {\n    // if (this._selectionSize() <= 1) {\n    //   return this._moveCursor(horizontal? { x: delta, y: 0 }:{ x:0, y: delta });\n    // }\n    let { x, y } = this._focus || { x: 0, y: 0 };\n    const selectionSize = this._selectionSize();\n    const { rx, ry } =\n      selectionSize > 1\n        ? this._selection\n        : {\n            rx: [0, this._options.maxCols],\n            ry: [0, this._options.maxRows],\n          };\n\n    let nc;\n    if (horizontal) {\n      nc = _shift(x, y, delta, rx[0], rx[1] - 1, ry[0], ry[1] - 1);\n    } else {\n      // use the same logic, but with x and y inverted for the horizontal tabbing wiht enter/ shift enter\n      const temporaryCursor = _shift(\n        y,\n        x,\n        delta,\n        ry[0],\n        ry[1] - 1,\n        rx[0],\n        rx[1] - 1\n      );\n      nc = {\n        x: temporaryCursor.y,\n        y: temporaryCursor.x,\n      };\n    }\n\n    if (!this._fitBounds(nc)) return;\n    this._stopEditing();\n    this._incrementToFit(nc);\n    this._changeSelectedCellsStyle(() => {\n      this._focus = nc;\n      if (selectionSize <= 1) {\n        this._selectionStart = this._selectionEnd = nc;\n      }\n    });\n    this._scrollIntoView(nc);\n  }\n\n  _scrollIntoView({ x, y }) {\n    this._getCell(x, y).scrollIntoView({\n      behavior: \"smooth\",\n      block: \"nearest\",\n    });\n  }\n\n  _selecting = false;\n  _selectionStart = null;\n  _selectionEnd = null;\n  _selection = { rx: [0, 0], ry: [0, 0] };\n  _editing = null;\n  _focus = null;\n\n  mousedown = (e) => {\n    if (this.mobile) return;\n    if (e.which === 3 && !this._editing && this._selectionSize()) {\n      // select some text to make the browser offer the copy option\n      let range = new Range();\n      const { rx, ry } = this._selection;\n      range.setStart(this._getCell(rx[0], ry[0]), 0);\n      range.setEnd(this._getCell(rx[0], ry[0]), 1);\n      this.cwd.getSelection().removeAllRanges();\n      this.cwd.getSelection().addRange(range);\n\n      return;\n    }\n    this._changeSelectedCellsStyle(() => {\n      this.tbody.style.userSelect = \"none\";\n      this._selectionEnd = this._selectionStart = this._focus = this._getCoords(\n        e\n      );\n      this._selecting = true;\n    });\n  };\n  mouseenter = (e) => {\n    if (this.mobile) return;\n    if (this._selecting) {\n      this._changeSelectedCellsStyle(() => {\n        this._selectionEnd = this._getCoords(e);\n      });\n    }\n  };\n\n  _lastMouseUp = null;\n  _lastMouseUpTarget = null;\n\n  _endSelection() {\n    this._selecting = false;\n    this.tbody.style.userSelect = \"\";\n  }\n\n  mouseup = (e) => {\n    if (this.mobile) return;\n    if (e.which === 3) return;\n\n    if (this._selecting) {\n      this._changeSelectedCellsStyle(() => {\n        this._selectionEnd = this._getCoords(e);\n        this._endSelection();\n\n        if (\n          this._lastMouseUp &&\n          this._lastMouseUp > Date.now() - 300 &&\n          this._lastMouseUpTarget.x === this._selectionEnd.x &&\n          this._lastMouseUpTarget.y === this._selectionEnd.y\n        ) {\n          this._startEditing(this._selectionEnd);\n        }\n        this._lastMouseUp = Date.now();\n        this._lastMouseUpTarget = this._selectionEnd;\n      });\n    }\n  };\n  mouseleave = (e) => {\n    if (e.target === this.tbody && this._selecting) {\n      this._endSelection();\n    }\n  };\n\n  touchstart = (e) => {\n    if (this._editing) return;\n    this.mobile = true;\n    this.moved = false;\n  };\n  touchend = (e) => {\n    if (!this.mobile) return;\n    if (this._editing) return;\n    if (!this.moved) {\n      this._changeSelectedCellsStyle(() => {\n        this._selectionEnd = this._selectionStart = this._focus = this._getCoords(\n          e\n        );\n      });\n      this._startEditing(this._focus);\n    }\n  };\n  touchmove = (e) => {\n    if (!this.mobile) return;\n    this.moved = true;\n  };\n\n  _startEditing({ x, y }) {\n    this._editing = { x, y };\n    const td = this._getCell(x, y);\n\n    // Measure the current content\n    const tdSize = td.getBoundingClientRect();\n    const cellSize = td.firstChild.getBoundingClientRect();\n\n    // remove the current content\n    td.removeChild(td.firstChild);\n\n    // add the input\n    const input = document.createElement(\"input\");\n    input.type = \"text\";\n    input.value = this._getVal(x, y);\n    td.appendChild(input);\n\n    // Make the new content fit the past size\n    Object.assign(td.style, {\n      width: tdSize.width - 2,\n      height: tdSize.height,\n    });\n\n    Object.assign(input.style, {\n      width: `${cellSize.width}px`,\n      height: `${cellSize.height}px`,\n    });\n\n    input.focus();\n    input.addEventListener(\"blur\", this._stopEditing);\n    input.addEventListener(\"keydown\", this._blurIfEnter);\n  }\n\n  _destroyEditing() {\n    if (this._editing) {\n      const { x, y } = this._editing;\n      const input = this._getCell(x, y).firstChild;\n      input.removeEventListener(\"blur\", this._stopEditing);\n      input.removeEventListener(\"keydown\", this._blurIfEnter);\n    }\n  }\n\n  _revertEdit() {\n    if (!this._editing) return;\n    const { x, y } = this._editing;\n    const td = this._getCell(x, y);\n    const input = td.firstChild;\n    input.value = this._getVal(x, y);\n  }\n\n  _stopEditing = () => {\n    if (!this._editing) return;\n    const { x, y } = this._editing;\n    const td = this._getCell(x, y);\n    td.style.width = \"\";\n    td.style.height = \"\";\n    const input = td.firstChild;\n    input.removeEventListener(\"blur\", this._stopEditing);\n    input.removeEventListener(\"keydown\", this._blurIfEnter);\n    this._setVal(x, y, input.value);\n    td.removeChild(input);\n    this._editing = null;\n    this._renderTDContent(td, x, y);\n    this._onDataChanged();\n  };\n  _blurIfEnter = (e) => {\n    const code = e.keyCode;\n    if (code === 13) {\n      // enter\n      this._stopEditing();\n      e.preventDefault();\n    }\n  };\n\n  _changeSelectedCellsStyle(callback) {\n    const oldS = this._selection;\n    callback();\n    this._selection = this._getSelectionCoords();\n    this._forSelectionCoord(oldS, this._restyle);\n    this._forSelectionCoord(this._selection, this._restyle);\n  }\n\n  _getSelectionCoords() {\n    if (!this._selectionStart) return { rx: [0, 0], ry: [0, 0] };\n    let rx = [this._selectionStart.x, this._selectionEnd.x];\n    if (rx[0] > rx[1]) rx.reverse();\n    let ry = [this._selectionStart.y, this._selectionEnd.y];\n    if (ry[0] > ry[1]) ry.reverse();\n    return { rx: [rx[0], rx[1] + 1], ry: [ry[0], ry[1] + 1] };\n  }\n\n  _forSelectionCoord({ rx, ry }, cb) {\n    for (let x = rx[0]; x < rx[1]; x++)\n      for (let y = ry[0]; y < ry[1]; y++)\n        if (this._fitBounds({ x, y })) cb({ x, y });\n  }\n\n  _restyle = ({ x, y }) => {\n    this._getCell(x, y).className = this._classNames(x, y);\n  };\n\n  _selectionSize() {\n    const { rx, ry } = this._selection;\n    return (rx[1] - rx[0]) * (ry[1] - ry[0]);\n  }\n\n  _classNames(x, y) {\n    const { rx, ry } = this._selection;\n    let classes = \"\";\n    if (x >= rx[0] && x < rx[1] && y >= ry[0] && y < ry[1]) {\n      classes += \" selected\";\n      if (this._selectionSize() > 1) {\n        classes += \" multi\";\n      }\n    }\n\n    if (this._focus && this._focus.x === x && this._focus.y === y) {\n      classes += \" focus\";\n    }\n    if (this._editing && x === this._editing.x && y === this._editing.y) {\n      classes += \" editing\";\n    }\n\n    return classes;\n  }\n\n  _refreshDisplayedValue = ({ x, y }) => {\n    const div = this._getCell(x, y).firstChild;\n    if (div.tagName === \"DIV\") {\n      div.textContent = this._getVal(x, y);\n    }\n    this._restyle({ x, y });\n  };\n\n  _getCoords(e) {\n    // Returns the clicked cell coords or null\n    let node = e.target;\n    while (!node.getAttribute(\"x\") && node.parentElement) {\n      node = node.parentElement;\n    }\n    return {\n      x: parseInt(node.getAttribute(\"x\")) || 0,\n      y: parseInt(node.getAttribute(\"y\")) || 0,\n    };\n  }\n\n  /** Replace the current data with the provided 2D array.\n   * @param {[[String]]} data the new data, as a 2D array.\n   * */\n  setData(data) {\n    // Empty table\n    this._data._clear();\n    // paste data\n    this._replaceDataWithArray(data);\n\n    // Refresh all cell, including outide of the\n    // provided rect, as they've juste been emptied\n    for (let x = 0; x < this._width; x++)\n      for (let y = 0; y < this._height; y++)\n        this._refreshDisplayedValue({ x, y });\n  }\n\n  /**Returns the current data as a 2D array\n   * @return {[[String]]} data the latest data as a 2D array.\n   *\n   * */\n  getData() {\n    return this._data._toArr();\n  }\n\n  _replaceDataWithArray(data) {\n    data.forEach((line, y) => {\n      line.forEach((val, x) => {\n        this._setVal(x, y, val);\n      });\n    });\n  }\n\n  _setVal(x, y, val) {\n    if (!this._fitBounds({ x, y })) return;\n\n    this._data._setVal(x, y, val);\n    this._incrementToFit({ x: x + 1, y: y + 1 });\n    this._refreshDisplayedValue({ x, y });\n  }\n\n  _getVal(x, y) {\n    return this._data._getVal(x, y);\n  }\n\n  _getCell(x, y) {\n    return this.tbody.children[y].children[x];\n  }\n}\nexport function _shift(x, y, deltaX, xMin, xMax, yMin, yMax) {\n  x += deltaX;\n  if (x < xMin) {\n    if (xMax === Infinity) {\n      return { x: xMin, y };\n    }\n    x = xMax;\n    y--;\n    if (y < yMin) {\n      if (yMax === Infinity) {\n        return { x: xMin, y: yMin };\n      }\n      y = yMax;\n    }\n  }\n  if (x > xMax) {\n    x = xMin;\n    y++;\n    if (y > yMax) {\n      y = yMin;\n      x = xMin;\n    }\n  }\n  return { x, y };\n}\n\nexport function _parsePasteEvent(event) {\n  try {\n    const html = (event.clipboardData || window.clipboardData).getData(\n      \"text/html\"\n    );\n\n    const iframe = document.createElement(\"iframe\");\n    document.body.appendChild(iframe);\n    iframe.contentWindow.document.open();\n    iframe.contentWindow.document.write(html);\n    iframe.contentWindow.document.close();\n\n    const trs = iframe.contentWindow.document.querySelectorAll(\"tr\");\n    const data = [];\n    Array.prototype.forEach.call(trs, (tr, y) => {\n      const tds = tr.querySelectorAll(\"td\");\n      Array.prototype.forEach.call(tds, (td, x) => {\n        const text = td.textContent;\n        if (!data[y]) data[y] = [];\n        data[y][x] = text;\n      });\n    });\n\n    document.body.removeChild(iframe);\n    if (data.length) return data;\n  } catch (e) {}\n\n  const fromText = (event.clipboardData || window.clipboardData)\n    .getData(\"text\")\n    .split(/\\r\\n|\\n|\\r/)\n    .map((row) => row.split(\"\"));\n  return fromText;\n}\nexport class _LooseArray {\n  // An 2D array of strings that only stores non \"\" values\n  _data = {};\n\n  _setVal(x, y, val) {\n    const hash = this._data;\n    const cleanedVal = _cleanVal(val);\n    if (cleanedVal) {\n      if (!hash[x]) hash[x] = {};\n      hash[x][y] = cleanedVal;\n    } else {\n      // delete item\n      if (hash[x] && hash[x][y]) {\n        delete hash[x][y];\n        if (_isEmpty(hash[x])) delete hash[x];\n      }\n    }\n  }\n\n  _clear() {\n    this._data = {};\n  }\n\n  _getVal(x, y) {\n    const hash = this._data;\n    return (hash && hash[x] && hash[x][y]) || \"\";\n  }\n\n  _toArr() {\n    let width = 1,\n      height = 1;\n    for (let x in this._data) {\n      for (let y in this._data[x]) {\n        height = Math.max(height, parseInt(y) + 1);\n        width = Math.max(width, parseInt(x) + 1);\n      }\n    }\n    const result = [];\n    for (let y = 0; y < height; y++) {\n      result.push([]);\n      for (let x = 0; x < width; x++) {\n        result[y].push(this._getVal(x, y));\n      }\n    }\n    return result;\n  }\n}\n\nexport function _cleanVal(val) {\n  if (val === 0) return \"0\";\n  if (!val) return \"\";\n  return val.toString();\n}\n\nexport function _isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\nexport function _arrToHTML(arr) {\n  const table = document.createElement(\"table\");\n  table.setAttribute(\"lang\", navigator.language);\n  arr.forEach((row) => {\n    const tr = document.createElement(\"tr\");\n    table.appendChild(tr);\n    row.forEach((cell) => {\n      const td = document.createElement(\"td\");\n      tr.appendChild(td);\n      td.textContent = cell;\n    });\n  });\n  return `<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\"><html lang=\"${navigator.language}\"><head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\"/><title></title></head><body>${table.outerHTML}</body></html>`;\n}\nexport const _defaultCss = `\nhtml{\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n}\n::-webkit-scrollbar {\n  width: 0;\n  height:0;\n}\n*{\n  box-sizing: border-box;\n}\nbody{\n  padding: 0; \n  margin: 0;\n}\ntable{\n  border-spacing: 0;\n  background: white;\n  border: 1px solid #ddd;\n  border-width: 0 1px 1px 0;\n  font-size: 16px;\n  font-family: sans-serif;\n  border-collapse: separate;\n}\ntd{\n  padding:0;\n  border: 1px solid;\n  border-color: #ddd transparent transparent #ddd; \n}\ntd.selected.multi:not(.editing){\n  background:#d7f2f9;\n} \ntd.focus:not(.editing){\n  border-color: black;\n} \ntd>*{\n  border:none;\n  padding:10px;\n  min-width:100px;\n  min-height: 40px;\n  font:inherit;\n  line-height: 20px;\n  color:inherit;\n  white-space: normal;\n}\ntd>div::selection {\n    color: none;\n    background: none;\n}\n`;\n","import Importabular from \"../src/index.js\";\nimport \"./demo.css\";\n\nwindow.sheet = new Importabular({\n  data: [\n    [\"Product ID\", \"Product name\", \"Price\", \"Unit\", \"Category\"],\n    [\"256\", \"Sample product\", \"2.5\", \"Piece\", \"Stuffs\"],\n    [\"122\", \"Pre mix drink\", \"5\", \"Bottle\", \"Drinks\"],\n  ],\n  node: document.getElementById(\"editorNode\"),\n  maxCols: 5,\n});\n\nconsole.info(`\n\nYou can play around with the instance on the page, try :\n\nsheet.getData()\nsheet.setData([['Hello','World']])\nsheet.destroy()\n\n`);\n\nArray.prototype.forEach.call(\n  document.getElementsByClassName(\"readable\"),\n  (n) => {\n    const pre = document.createElement(\"pre\");\n    pre.className = \"auto\";\n\n    let js = n.innerText\n      .trim()\n      .replace('from \"./dist/index.js\"', 'from \"importabular\"')\n      .replace('from \"./src/index.js\"', 'from \"importabular/src/index.js\"');\n\n    const lines = js.split(\"\\n\");\n    const offset = lines[1].match(/ +/)[0].length;\n    js = lines\n      .map((l, i) =>\n        i ? (l.slice(0, offset).trim() ? l.trim() : l.slice(offset)) : l\n      )\n      .join(\"\\n\");\n\n    pre.innerText = js;\n\n    n.parentElement.appendChild(pre);\n  }\n);\n"]}